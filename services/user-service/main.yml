- name: Create Docker service on Swarm cluster
  hosts: _manager
  become: true
  vars:
    service_name: user-service
    image_name: samagragovernance/esamwad-user-service
    image_tag: latest
    replicas: 2
    container_port: 3000
    published_port: 3005

  tasks:
    - name: Verify if service exists
      docker_swarm_info:
        services_filters:
          name: "{{ service_name }}"
        services: yes
      register: swarm_service

    - name: Create Docker service
      docker_swarm_service:
        name: "{{ service_name }}"
        image: "{{ image_name }}:{{ image_tag }}"
        replicas: "{{ replicas }}"
        placement:
          constraints:
            - node.labels.node_vm_type == non_gpu
            - node.role == worker
        force_update: yes
        networks:
          - communication
        env:
          "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/user_service') }}"
        publish:
          - published_port: "{{ published_port }}"
            target_port: "{{ container_port }}"
            protocol: tcp
            mode: ingress
        state: present

    - name: Register middleware host with variable
      add_host:
        name: "MIDDLEWARE_HOST"
        service_name: "{{ service_name }}"
        container_port: "{{ container_port }}"

    - name: Sleep for 5 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 5
      delegate_to: localhost

- name: Setup nginx config for user-service
  hosts: _manager:_worker:_gpu
  become: true
  vars:
    service_name: "{{ hostvars['MIDDLEWARE_HOST']['service_name'] }}"
    service_port: "{{ hostvars['MIDDLEWARE_HOST']['container_port'] }}"
    proxy_address: "http://{{ service_name }}"
    upstream: true
    use_https: true
  tasks:
    - name: Create a /nginx directory
      ansible.builtin.file:
        path: /nginx
        state: directory
        mode: '0755'

    - name: Create a /nginx/conf.d directory
      ansible.builtin.file:
        path: /nginx/conf.d
        state: directory
        mode: '0755'

    - name: generate a nginx conf file
      template:
        src: "~/devops/templates/nginx-v2.conf.j2"
        dest: /nginx/conf.d/user-service.conf

    - name: Run nginx reload command on every running nginx container
      shell: |
        docker exec $(docker ps -q -f name=nginx) nginx -s reload
