- name: Setup stateful services
  hosts: _manual
  become: true
  vars:
    vault_secrets: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/bff_timescaledb') }}"
  tasks:
    - name: Create a bff dir if it does not exist
      ansible.builtin.file:
        path: /bff
        state: directory
        mode: '0755'

    - name: Copy file from host to machine
      copy:
        src: "{{ playbook_dir }}/docker-compose.yml"
        dest: /bff/docker-compose.yml


    - name: Generate .env file from vault lookup
      copy:
        dest: /bff/.env
        content: |
          {% for key, value in vault_secrets.items() %}
          {{ key }}={{ value }}
          {% endfor %}          

    - name: Create and start services
      community.docker.docker_compose:
        project_src: /bff/
        env_file: /bff/.env
      register: output

    - debug:
        var: output

- name: Pull latest image for bff
  hosts: _worker:_manager:_worker_gpu
  become: true
  vars:
    image_name: ghcr.io/chatwithpdf/bff
    image_tag: main
  tasks:
    - name: Login to Github Packages Registry
      community.docker.docker_login:
        registry_url: ghcr.io/
        username: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/common:GITHUB_USERNAME') }}"
        password: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/common:GITHUB_TOKEN') }}"

    - name: pull an image
      docker_image:
        name: "{{ image_name }}:{{ image_tag }}"
        source: "pull"
        force_source: yes
      register: output
      

    - debug:
        var: output
    
- name: Create Docker service on Swarm cluster
  hosts: _manager
  become: true
  vars:
    service_name: bff
    image_name: ghcr.io/chatwithpdf/bff
    image_tag: main
    replicas: 1
    container_port: 3000
    published_port: 8081
  tasks:
    - name: Verify if service exists
      docker_swarm_info:
        services_filters:
          name: "{{ service_name }}"
        services: yes
      register: swarm_service

    - name: Create Docker service
      docker_swarm_service:
        name: "{{ service_name }}"
        image: "{{ image_name }}:{{ image_tag }}"
        replicas: "{{ replicas }}"
        placement:
          constraints:
            - node.role == worker
        force_update: yes
        env:
          "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/bff') }}"
        publish:
          - published_port: "{{ published_port }}"
            target_port: "{{ container_port }}"
            protocol: tcp
            mode: ingress
        state: present

    - name: Register middleware host with variable
      add_host:
        name: "MIDDLEWARE_HOST"
        PROXY_ADDRESS: "{{ ansible_default_ipv4.address }}"

- name: Setup nginx config for bff
  hosts: _manager:_worker:_worker_gpu
  become: true
  vars:
    server_name: "bff.*"
    proxy_address: "http://{{ hostvars['MIDDLEWARE_HOST']['PROXY_ADDRESS'] }}:8081"
    config: ["client_max_body_size 100M;", "proxy_read_timeout 600;", "proxy_connect_timeout 600;", "proxy_send_timeout 600;"]
    use_https: true
  tasks: 
    - name: Create a /nginx directory
      ansible.builtin.file:
        path: /nginx
        state: directory
        mode: '0755'

    - name: Create a /nginx/conf.d directory
      ansible.builtin.file:
        path: /nginx/conf.d
        state: directory
        mode: '0755'

    - name: generate a nginx conf file
      template:
        src: "~/devops/templates/nginx.conf.j2"
        dest: /nginx/conf.d/bff.conf

    - name: Run nginx reload command on every running nginx container
      shell: |
        docker exec $(docker ps -q -f name=nginx) nginx -s reload
