- name: Setup stateful services
  hosts: _manual
  become: true
  vars:
    vault_secrets: "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/fusionauth_db') }}"
  tasks:
    - name: Create a bff dir if it does not exist
      ansible.builtin.file:
        path: /fusionauth
        state: directory
        mode: '0755'

    - name: Copy file from host to machine
      copy:
        src: "{{ playbook_dir }}/docker-compose.yml"
        dest: /fusionauth/docker-compose.yml


    - name: Generate .env file from vault lookup
      copy:
        dest: /fusionauth/.env
        content: |
          {% for key, value in vault_secrets.items() %}
          {{ key }}={{ value }}
          {% endfor %}

    - name: Create and start services
      community.docker.docker_compose:
        project_src: /fusionauth/
        env_file: /fusionauth/.env
      register: output

    - debug:
        var: output

- name: Pull latest image for fusionauth
  hosts: _worker:_manager:_worker_gpu
  become: true
  vars:
    image_name: fusionauth/fusionauth-app
    image_tag: latest
  tasks:
    - name: pull an image
      docker_image:
        name: "{{ image_name }}:{{ image_tag }}"
        source: "pull"
        force_source: yes
      register: output

    - debug:
        var: output
- name: Create Docker service on Swarm cluster
  hosts: _manager
  become: true
  vars:
    service_name: fusionauth
    image_name: fusionauth/fusionauth-app
    image_tag: latest
    replicas: 1
    container_port: 9011
    published_port: 9011
  tasks:
    - name: Verify if service exists
      docker_swarm_info:
        services_filters:
          name: "{{ service_name }}"
        services: yes
      register: swarm_service

    - name: Create Docker service
      docker_swarm_service:
        name: "{{ service_name }}"
        image: "{{ image_name }}:{{ image_tag }}"
        replicas: "{{ replicas }}"
        placement:
          constraints:
            - node.role == worker
        force_update: yes
        networks:
          - communication
        env:
          "{{ lookup('community.hashi_vault.hashi_vault', 'secret=secret/data/fusionauth') }}"
        publish:
          - published_port: "{{ published_port }}"
            target_port: "{{ container_port }}"
            protocol: tcp
            mode: ingress
        state: present

    - name: Register middleware host with variable
      add_host:
        name: "MIDDLEWARE_HOST"
        service_name: "{{ service_name }}"
        container_port: "{{ container_port }}"

    - name: Sleep for 5 seconds and continue with play
      ansible.builtin.wait_for:
        timeout: 5
      delegate_to: localhost

- name: Setup nginx config for fusionauth
  hosts: _manager:_worker:_worker_gpu
  become: true
  vars:
    service_name: "{{ hostvars['MIDDLEWARE_HOST']['service_name'] }}"
    upstream: true
    service_port: "{{ hostvars['MIDDLEWARE_HOST']['container_port'] }}"
    proxy_address: "http://{{ service_name }}"
    config: ["proxy_set_header Host $host;","proxy_set_header X-Real-IP $remote_addr;","proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;", "proxy_set_header X-Forwarded-Proto https;", "proxy_set_header X-Forwarded-Port 443;"]
    use_https: true
  tasks:
    - name: Create a /nginx directory
      ansible.builtin.file:
        path: /nginx
        state: directory
        mode: '0755'

    - name: Create a /nginx/conf.d directory
      ansible.builtin.file:
        path: /nginx/conf.d
        state: directory
        mode: '0755'

    - name: generate a nginx conf file
      template:
        src: "{{ playbook_dir }}/nginx.conf.j2"
        dest: /nginx/conf.d/fusionauth.conf

    - name: Run nginx reload command on every running nginx container
      shell: |
        docker exec $(docker ps -q -f name=nginx) nginx -s reload
      ignore_errors: yes
